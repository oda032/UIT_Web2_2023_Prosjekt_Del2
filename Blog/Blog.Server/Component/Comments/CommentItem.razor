@using Blog.Common.Model.Dto
@using Blog.Common.Model.ViewModel

<MudContainer Fixed="true">
    <div>
        <table class="table table-bordered text-start bg-light">
            <tbody class="table-body">
                <tr>
                    <td width="10%"><strong>@CommentModel.UserName</strong></td>
                    @*<td width="20%">@CommentModel.CommentTitle</td>*@
                    <td width="70%">@CommentModel.CommentDetails</td>
                    <AuthorizeView>
                        <Authorized>
                            @if (IsAuthor(CommentModel.CommentOwnerID))
                            {
                                <td width="20%">
                                    <MudButton Variant="Variant.Filled" Style="@($"color:{Colors.Grey.Lighten5}; background-color:{Colors.Red.Lighten2}")" OnClick="@DeleteComment">Delete</MudButton>
                                </td>
                            }
                            else
                            {
                                <td width="20%">  </td>
                            }
                        </Authorized>
                        <NotAuthorized>
                            <td width="20%">  </td>
                        </NotAuthorized>
                    </AuthorizeView>
                </tr>
            </tbody>
        </table>
    </div>
</MudContainer>


@code {
    [Parameter]
    public CommentModel CommentModel { get; set; }

    [Parameter]
    public string UserID { get; set; }

    [Parameter]
    public EventCallback<CommentModel> OnDeleteCommentCalled { get; set; }

    private async Task DeleteComment()
    {
        await OnDeleteCommentCalled.InvokeAsync(CommentModel);
    }

    private bool IsAuthor(string userId)
    {
        if (userId == UserID)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}